<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurTaskCompAttrMapper">
  <resultMap id="BaseResultMap" type="cn.hy.aurora.mapper.AurTaskCompAttr">
    <result column="attribute_id" jdbcType="INTEGER" property="attributeId" />
    <result column="attribute_name" jdbcType="VARCHAR" property="attributeName" />
    <result column="attribute_component" jdbcType="INTEGER" property="attributeComponent" />
    <result column="attribute_create" jdbcType="INTEGER" property="attributeCreate" />
    <result column="attribute_create_date" jdbcType="VARCHAR" property="attributeCreateDate" />
    <result column="attribute_modify" jdbcType="INTEGER" property="attributeModify" />
    <result column="attribute_modify_date" jdbcType="VARCHAR" property="attributeModifyDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attribute_id, attribute_name, attribute_component, attribute_create, attribute_create_date, 
    attribute_modify, attribute_modify_date
  </sql>
  <select id="selectByExample" parameterType="cn.hy.aurora.mapper.AurTaskCompAttrExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aur_task_comp_attr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hy.aurora.mapper.AurTaskCompAttrExample">
    delete from aur_task_comp_attr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.aurora.mapper.AurTaskCompAttr">
    insert into aur_task_comp_attr (attribute_id, attribute_name, attribute_component, 
      attribute_create, attribute_create_date, attribute_modify, 
      attribute_modify_date)
    values (#{attributeId,jdbcType=INTEGER}, #{attributeName,jdbcType=VARCHAR}, #{attributeComponent,jdbcType=INTEGER}, 
      #{attributeCreate,jdbcType=INTEGER}, #{attributeCreateDate,jdbcType=VARCHAR}, #{attributeModify,jdbcType=INTEGER}, 
      #{attributeModifyDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.aurora.mapper.AurTaskCompAttr">
    insert into aur_task_comp_attr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attributeId != null">
        attribute_id,
      </if>
      <if test="attributeName != null">
        attribute_name,
      </if>
      <if test="attributeComponent != null">
        attribute_component,
      </if>
      <if test="attributeCreate != null">
        attribute_create,
      </if>
      <if test="attributeCreateDate != null">
        attribute_create_date,
      </if>
      <if test="attributeModify != null">
        attribute_modify,
      </if>
      <if test="attributeModifyDate != null">
        attribute_modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attributeId != null">
        #{attributeId,jdbcType=INTEGER},
      </if>
      <if test="attributeName != null">
        #{attributeName,jdbcType=VARCHAR},
      </if>
      <if test="attributeComponent != null">
        #{attributeComponent,jdbcType=INTEGER},
      </if>
      <if test="attributeCreate != null">
        #{attributeCreate,jdbcType=INTEGER},
      </if>
      <if test="attributeCreateDate != null">
        #{attributeCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="attributeModify != null">
        #{attributeModify,jdbcType=INTEGER},
      </if>
      <if test="attributeModifyDate != null">
        #{attributeModifyDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.aurora.mapper.AurTaskCompAttrExample" resultType="java.lang.Long">
    select count(*) from aur_task_comp_attr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aur_task_comp_attr
    <set>
      <if test="record.attributeId != null">
        attribute_id = #{record.attributeId,jdbcType=INTEGER},
      </if>
      <if test="record.attributeName != null">
        attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      </if>
      <if test="record.attributeComponent != null">
        attribute_component = #{record.attributeComponent,jdbcType=INTEGER},
      </if>
      <if test="record.attributeCreate != null">
        attribute_create = #{record.attributeCreate,jdbcType=INTEGER},
      </if>
      <if test="record.attributeCreateDate != null">
        attribute_create_date = #{record.attributeCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.attributeModify != null">
        attribute_modify = #{record.attributeModify,jdbcType=INTEGER},
      </if>
      <if test="record.attributeModifyDate != null">
        attribute_modify_date = #{record.attributeModifyDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aur_task_comp_attr
    set attribute_id = #{record.attributeId,jdbcType=INTEGER},
      attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      attribute_component = #{record.attributeComponent,jdbcType=INTEGER},
      attribute_create = #{record.attributeCreate,jdbcType=INTEGER},
      attribute_create_date = #{record.attributeCreateDate,jdbcType=VARCHAR},
      attribute_modify = #{record.attributeModify,jdbcType=INTEGER},
      attribute_modify_date = #{record.attributeModifyDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>