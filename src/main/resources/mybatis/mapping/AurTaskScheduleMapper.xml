<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurTaskScheduleMapper">
  <resultMap id="BaseResultMap" type="cn.hy.aurora.mapper.AurTaskSchedule">
    <result column="schedule_id" jdbcType="INTEGER" property="scheduleId" />
    <result column="schedule_belong" jdbcType="INTEGER" property="scheduleBelong" />
    <result column="schedule_name" jdbcType="VARCHAR" property="scheduleName" />
    <result column="schedule_complete" jdbcType="BIT" property="scheduleComplete" />
    <result column="schedule_create" jdbcType="INTEGER" property="scheduleCreate" />
    <result column="schedule_create_date" jdbcType="VARCHAR" property="scheduleCreateDate" />
    <result column="schedule_modify" jdbcType="INTEGER" property="scheduleModify" />
    <result column="schedule_modify_date" jdbcType="VARCHAR" property="scheduleModifyDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    schedule_id, schedule_belong, schedule_name, schedule_complete, schedule_create, 
    schedule_create_date, schedule_modify, schedule_modify_date
  </sql>
  <select id="selectByExample" parameterType="cn.hy.aurora.mapper.AurTaskScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aur_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hy.aurora.mapper.AurTaskScheduleExample">
    delete from aur_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.aurora.mapper.AurTaskSchedule">
    insert into aur_task_schedule (schedule_id, schedule_belong, schedule_name, 
      schedule_complete, schedule_create, schedule_create_date, 
      schedule_modify, schedule_modify_date)
    values (#{scheduleId,jdbcType=INTEGER}, #{scheduleBelong,jdbcType=INTEGER}, #{scheduleName,jdbcType=VARCHAR}, 
      #{scheduleComplete,jdbcType=BIT}, #{scheduleCreate,jdbcType=INTEGER}, #{scheduleCreateDate,jdbcType=VARCHAR}, 
      #{scheduleModify,jdbcType=INTEGER}, #{scheduleModifyDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.aurora.mapper.AurTaskSchedule">
    insert into aur_task_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="scheduleBelong != null">
        schedule_belong,
      </if>
      <if test="scheduleName != null">
        schedule_name,
      </if>
      <if test="scheduleComplete != null">
        schedule_complete,
      </if>
      <if test="scheduleCreate != null">
        schedule_create,
      </if>
      <if test="scheduleCreateDate != null">
        schedule_create_date,
      </if>
      <if test="scheduleModify != null">
        schedule_modify,
      </if>
      <if test="scheduleModifyDate != null">
        schedule_modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="scheduleBelong != null">
        #{scheduleBelong,jdbcType=INTEGER},
      </if>
      <if test="scheduleName != null">
        #{scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleComplete != null">
        #{scheduleComplete,jdbcType=BIT},
      </if>
      <if test="scheduleCreate != null">
        #{scheduleCreate,jdbcType=INTEGER},
      </if>
      <if test="scheduleCreateDate != null">
        #{scheduleCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="scheduleModify != null">
        #{scheduleModify,jdbcType=INTEGER},
      </if>
      <if test="scheduleModifyDate != null">
        #{scheduleModifyDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.aurora.mapper.AurTaskScheduleExample" resultType="java.lang.Long">
    select count(*) from aur_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aur_task_schedule
    <set>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleBelong != null">
        schedule_belong = #{record.scheduleBelong,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleName != null">
        schedule_name = #{record.scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleComplete != null">
        schedule_complete = #{record.scheduleComplete,jdbcType=BIT},
      </if>
      <if test="record.scheduleCreate != null">
        schedule_create = #{record.scheduleCreate,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleCreateDate != null">
        schedule_create_date = #{record.scheduleCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleModify != null">
        schedule_modify = #{record.scheduleModify,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleModifyDate != null">
        schedule_modify_date = #{record.scheduleModifyDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aur_task_schedule
    set schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      schedule_belong = #{record.scheduleBelong,jdbcType=INTEGER},
      schedule_name = #{record.scheduleName,jdbcType=VARCHAR},
      schedule_complete = #{record.scheduleComplete,jdbcType=BIT},
      schedule_create = #{record.scheduleCreate,jdbcType=INTEGER},
      schedule_create_date = #{record.scheduleCreateDate,jdbcType=VARCHAR},
      schedule_modify = #{record.scheduleModify,jdbcType=INTEGER},
      schedule_modify_date = #{record.scheduleModifyDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>