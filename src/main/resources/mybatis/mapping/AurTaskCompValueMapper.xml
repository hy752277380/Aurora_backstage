<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurTaskCompValueMapper">
  <resultMap id="BaseResultMap" type="cn.hy.aurora.mapper.AurTaskCompValue">
    <result column="value_id" jdbcType="INTEGER" property="valueId" />
    <result column="value_type" jdbcType="CHAR" property="valueType" />
    <result column="value_content" jdbcType="VARCHAR" property="valueContent" />
    <result column="value_create" jdbcType="INTEGER" property="valueCreate" />
    <result column="value_create_date" jdbcType="VARCHAR" property="valueCreateDate" />
    <result column="value_modify" jdbcType="INTEGER" property="valueModify" />
    <result column="value_modify_date" jdbcType="VARCHAR" property="valueModifyDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    value_id, value_type, value_content, value_create, value_create_date, value_modify, 
    value_modify_date
  </sql>
  <select id="selectByExample" parameterType="cn.hy.aurora.mapper.AurTaskCompValueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aur_task_comp_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hy.aurora.mapper.AurTaskCompValueExample">
    delete from aur_task_comp_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.aurora.mapper.AurTaskCompValue">
    insert into aur_task_comp_value (value_id, value_type, value_content, 
      value_create, value_create_date, value_modify, 
      value_modify_date)
    values (#{valueId,jdbcType=INTEGER}, #{valueType,jdbcType=CHAR}, #{valueContent,jdbcType=VARCHAR}, 
      #{valueCreate,jdbcType=INTEGER}, #{valueCreateDate,jdbcType=VARCHAR}, #{valueModify,jdbcType=INTEGER}, 
      #{valueModifyDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.aurora.mapper.AurTaskCompValue">
    insert into aur_task_comp_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="valueId != null">
        value_id,
      </if>
      <if test="valueType != null">
        value_type,
      </if>
      <if test="valueContent != null">
        value_content,
      </if>
      <if test="valueCreate != null">
        value_create,
      </if>
      <if test="valueCreateDate != null">
        value_create_date,
      </if>
      <if test="valueModify != null">
        value_modify,
      </if>
      <if test="valueModifyDate != null">
        value_modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="valueId != null">
        #{valueId,jdbcType=INTEGER},
      </if>
      <if test="valueType != null">
        #{valueType,jdbcType=CHAR},
      </if>
      <if test="valueContent != null">
        #{valueContent,jdbcType=VARCHAR},
      </if>
      <if test="valueCreate != null">
        #{valueCreate,jdbcType=INTEGER},
      </if>
      <if test="valueCreateDate != null">
        #{valueCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="valueModify != null">
        #{valueModify,jdbcType=INTEGER},
      </if>
      <if test="valueModifyDate != null">
        #{valueModifyDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.aurora.mapper.AurTaskCompValueExample" resultType="java.lang.Long">
    select count(*) from aur_task_comp_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aur_task_comp_value
    <set>
      <if test="record.valueId != null">
        value_id = #{record.valueId,jdbcType=INTEGER},
      </if>
      <if test="record.valueType != null">
        value_type = #{record.valueType,jdbcType=CHAR},
      </if>
      <if test="record.valueContent != null">
        value_content = #{record.valueContent,jdbcType=VARCHAR},
      </if>
      <if test="record.valueCreate != null">
        value_create = #{record.valueCreate,jdbcType=INTEGER},
      </if>
      <if test="record.valueCreateDate != null">
        value_create_date = #{record.valueCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.valueModify != null">
        value_modify = #{record.valueModify,jdbcType=INTEGER},
      </if>
      <if test="record.valueModifyDate != null">
        value_modify_date = #{record.valueModifyDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aur_task_comp_value
    set value_id = #{record.valueId,jdbcType=INTEGER},
      value_type = #{record.valueType,jdbcType=CHAR},
      value_content = #{record.valueContent,jdbcType=VARCHAR},
      value_create = #{record.valueCreate,jdbcType=INTEGER},
      value_create_date = #{record.valueCreateDate,jdbcType=VARCHAR},
      value_modify = #{record.valueModify,jdbcType=INTEGER},
      value_modify_date = #{record.valueModifyDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>