<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurTaskComponentMapper">
  <resultMap id="BaseResultMap" type="cn.hy.aurora.mapper.AurTaskComponent">
    <result column="component_id" jdbcType="INTEGER" property="componentId" />
    <result column="component_name" jdbcType="VARCHAR" property="componentName" />
    <result column="component_gif_url" jdbcType="VARCHAR" property="componentGifUrl" />
    <result column="component_create" jdbcType="INTEGER" property="componentCreate" />
    <result column="component_create_date" jdbcType="VARCHAR" property="componentCreateDate" />
    <result column="component_modify" jdbcType="INTEGER" property="componentModify" />
    <result column="component_modify_date" jdbcType="VARCHAR" property="componentModifyDate" />
    <result column="component_enable" jdbcType="BIT" property="componentEnable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    component_id, component_name, component_gif_url, component_create, component_create_date, 
    component_modify, component_modify_date, component_enable
  </sql>
  <select id="selectByExample" parameterType="cn.hy.aurora.mapper.AurTaskComponentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aur_task_component
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hy.aurora.mapper.AurTaskComponentExample">
    delete from aur_task_component
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.aurora.mapper.AurTaskComponent">
    insert into aur_task_component (component_id, component_name, component_gif_url, 
      component_create, component_create_date, component_modify, 
      component_modify_date, component_enable)
    values (#{componentId,jdbcType=INTEGER}, #{componentName,jdbcType=VARCHAR}, #{componentGifUrl,jdbcType=VARCHAR}, 
      #{componentCreate,jdbcType=INTEGER}, #{componentCreateDate,jdbcType=VARCHAR}, #{componentModify,jdbcType=INTEGER}, 
      #{componentModifyDate,jdbcType=VARCHAR}, #{componentEnable,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.aurora.mapper.AurTaskComponent">
    insert into aur_task_component
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="componentId != null">
        component_id,
      </if>
      <if test="componentName != null">
        component_name,
      </if>
      <if test="componentGifUrl != null">
        component_gif_url,
      </if>
      <if test="componentCreate != null">
        component_create,
      </if>
      <if test="componentCreateDate != null">
        component_create_date,
      </if>
      <if test="componentModify != null">
        component_modify,
      </if>
      <if test="componentModifyDate != null">
        component_modify_date,
      </if>
      <if test="componentEnable != null">
        component_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="componentId != null">
        #{componentId,jdbcType=INTEGER},
      </if>
      <if test="componentName != null">
        #{componentName,jdbcType=VARCHAR},
      </if>
      <if test="componentGifUrl != null">
        #{componentGifUrl,jdbcType=VARCHAR},
      </if>
      <if test="componentCreate != null">
        #{componentCreate,jdbcType=INTEGER},
      </if>
      <if test="componentCreateDate != null">
        #{componentCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="componentModify != null">
        #{componentModify,jdbcType=INTEGER},
      </if>
      <if test="componentModifyDate != null">
        #{componentModifyDate,jdbcType=VARCHAR},
      </if>
      <if test="componentEnable != null">
        #{componentEnable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.aurora.mapper.AurTaskComponentExample" resultType="java.lang.Long">
    select count(*) from aur_task_component
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aur_task_component
    <set>
      <if test="record.componentId != null">
        component_id = #{record.componentId,jdbcType=INTEGER},
      </if>
      <if test="record.componentName != null">
        component_name = #{record.componentName,jdbcType=VARCHAR},
      </if>
      <if test="record.componentGifUrl != null">
        component_gif_url = #{record.componentGifUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.componentCreate != null">
        component_create = #{record.componentCreate,jdbcType=INTEGER},
      </if>
      <if test="record.componentCreateDate != null">
        component_create_date = #{record.componentCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.componentModify != null">
        component_modify = #{record.componentModify,jdbcType=INTEGER},
      </if>
      <if test="record.componentModifyDate != null">
        component_modify_date = #{record.componentModifyDate,jdbcType=VARCHAR},
      </if>
      <if test="record.componentEnable != null">
        component_enable = #{record.componentEnable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aur_task_component
    set component_id = #{record.componentId,jdbcType=INTEGER},
      component_name = #{record.componentName,jdbcType=VARCHAR},
      component_gif_url = #{record.componentGifUrl,jdbcType=VARCHAR},
      component_create = #{record.componentCreate,jdbcType=INTEGER},
      component_create_date = #{record.componentCreateDate,jdbcType=VARCHAR},
      component_modify = #{record.componentModify,jdbcType=INTEGER},
      component_modify_date = #{record.componentModifyDate,jdbcType=VARCHAR},
      component_enable = #{record.componentEnable,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>