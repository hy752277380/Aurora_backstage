<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurArticleLogMapper">
    <resultMap id="BaseResultMap" type="cn.hy.aurora.domain.AurArticleLog">
        <result column="log_id" jdbcType="INTEGER" property="logId"/>
        <result column="visit_article_id" jdbcType="INTEGER" property="visitArticleId"/>
        <result column="visit_into_time" jdbcType="TIMESTAMP" property="visitIntoTime"/>
        <result column="visit_ip" jdbcType="CHAR" property="visitIp"/>
        <result column="log_create_time" jdbcType="TIMESTAMP" property="logCreateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    log_id, visit_article_id, visit_into_time, visit_ip, log_create_time
  </sql>
    <select id="selectByExample" parameterType="cn.hy.aurora.domain.AurArticleLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from aur_article_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.hy.aurora.domain.AurArticleLogExample">
        delete from aur_article_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.hy.aurora.domain.AurArticleLog">
    insert into aur_article_log (log_id, visit_article_id, visit_into_time, 
      visit_ip, log_create_time)
    values (#{logId,jdbcType=INTEGER}, #{visitArticleId,jdbcType=INTEGER}, #{visitIntoTime,jdbcType=TIMESTAMP}, 
      #{visitIp,jdbcType=CHAR}, #{logCreateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="cn.hy.aurora.domain.AurArticleLog">
        insert into aur_article_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                log_id,
            </if>
            <if test="visitArticleId != null">
                visit_article_id,
            </if>
            <if test="visitIntoTime != null">
                visit_into_time,
            </if>
            <if test="visitIp != null">
                visit_ip,
            </if>
            <if test="logCreateTime != null">
                log_create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                #{logId,jdbcType=INTEGER},
            </if>
            <if test="visitArticleId != null">
                #{visitArticleId,jdbcType=INTEGER},
            </if>
            <if test="visitIntoTime != null">
                #{visitIntoTime,jdbcType=TIMESTAMP},
            </if>
            <if test="visitIp != null">
                #{visitIp,jdbcType=CHAR},
            </if>
            <if test="logCreateTime != null">
                #{logCreateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.hy.aurora.domain.AurArticleLogExample" resultType="java.lang.Long">
        select count(*) from aur_article_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update aur_article_log
        <set>
            <if test="record.logId != null">
                log_id = #{record.logId,jdbcType=INTEGER},
            </if>
            <if test="record.visitArticleId != null">
                visit_article_id = #{record.visitArticleId,jdbcType=INTEGER},
            </if>
            <if test="record.visitIntoTime != null">
                visit_into_time = #{record.visitIntoTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.visitIp != null">
                visit_ip = #{record.visitIp,jdbcType=CHAR},
            </if>
            <if test="record.logCreateTime != null">
                log_create_time = #{record.logCreateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update aur_article_log
        set log_id = #{record.logId,jdbcType=INTEGER},
        visit_article_id = #{record.visitArticleId,jdbcType=INTEGER},
        visit_into_time = #{record.visitIntoTime,jdbcType=TIMESTAMP},
        visit_ip = #{record.visitIp,jdbcType=CHAR},
        log_create_time = #{record.logCreateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>