<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurArticleInfoMapper">
    <resultMap id="BaseResultMap" type="cn.hy.aurora.domain.AurArticleInfo">
        <result column="article_id" jdbcType="INTEGER" property="articleId"/>
        <result column="article_category" jdbcType="INTEGER" property="articleCategory"/>
        <result column="article_title" jdbcType="VARCHAR" property="articleTitle"/>
        <result column="article_author" jdbcType="INTEGER" property="articleAuthor"/>
        <result column="article_label" jdbcType="INTEGER" property="articleLabel"/>
        <result column="article_md_url" jdbcType="VARCHAR" property="articleMdUrl"/>
        <result column="article_description" jdbcType="VARCHAR" property="articleDescription"/>
        <result column="article_creator" jdbcType="INTEGER" property="articleCreator"/>
        <result column="article_create_date" jdbcType="VARCHAR" property="articleCreateDate"/>
        <result column="article_original" jdbcType="BIT" property="articleOriginal"/>
        <result column="article_original_link" jdbcType="VARCHAR" property="articleOriginalLink"/>
        <result column="article_secret" jdbcType="BIT" property="articleSecret"/>
        <result column="article_top" jdbcType="BIT" property="articleTop"/>
        <result column="article_deleted" jdbcType="BIT" property="articleDeleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    article_id, article_category, article_title, article_author, article_label, article_md_url, 
    article_description, article_creator, article_create_date, article_original, article_original_link, 
    article_secret, article_top, article_deleted
  </sql>
    <select id="selectByExample" parameterType="cn.hy.aurora.domain.AurArticleInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from aur_article_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.hy.aurora.domain.AurArticleInfoExample">
        delete from aur_article_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.hy.aurora.domain.AurArticleInfo">
    insert into aur_article_info (article_id, article_category, article_title, 
      article_author, article_label, article_md_url, 
      article_description, article_creator, article_create_date, 
      article_original, article_original_link, article_secret, 
      article_top, article_deleted)
    values (#{articleId,jdbcType=INTEGER}, #{articleCategory,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleAuthor,jdbcType=INTEGER}, #{articleLabel,jdbcType=INTEGER}, #{articleMdUrl,jdbcType=VARCHAR}, 
      #{articleDescription,jdbcType=VARCHAR}, #{articleCreator,jdbcType=INTEGER}, #{articleCreateDate,jdbcType=VARCHAR}, 
      #{articleOriginal,jdbcType=BIT}, #{articleOriginalLink,jdbcType=VARCHAR}, #{articleSecret,jdbcType=BIT}, 
      #{articleTop,jdbcType=BIT}, #{articleDeleted,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="cn.hy.aurora.domain.AurArticleInfo">
        insert into aur_article_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="articleId != null">
                article_id,
            </if>
            <if test="articleCategory != null">
                article_category,
            </if>
            <if test="articleTitle != null">
                article_title,
            </if>
            <if test="articleAuthor != null">
                article_author,
            </if>
            <if test="articleLabel != null">
                article_label,
            </if>
            <if test="articleMdUrl != null">
                article_md_url,
            </if>
            <if test="articleDescription != null">
                article_description,
            </if>
            <if test="articleCreator != null">
                article_creator,
            </if>
            <if test="articleCreateDate != null">
                article_create_date,
            </if>
            <if test="articleOriginal != null">
                article_original,
            </if>
            <if test="articleOriginalLink != null">
                article_original_link,
            </if>
            <if test="articleSecret != null">
                article_secret,
            </if>
            <if test="articleTop != null">
                article_top,
            </if>
            <if test="articleDeleted != null">
                article_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="articleId != null">
                #{articleId,jdbcType=INTEGER},
            </if>
            <if test="articleCategory != null">
                #{articleCategory,jdbcType=INTEGER},
            </if>
            <if test="articleTitle != null">
                #{articleTitle,jdbcType=VARCHAR},
            </if>
            <if test="articleAuthor != null">
                #{articleAuthor,jdbcType=INTEGER},
            </if>
            <if test="articleLabel != null">
                #{articleLabel,jdbcType=INTEGER},
            </if>
            <if test="articleMdUrl != null">
                #{articleMdUrl,jdbcType=VARCHAR},
            </if>
            <if test="articleDescription != null">
                #{articleDescription,jdbcType=VARCHAR},
            </if>
            <if test="articleCreator != null">
                #{articleCreator,jdbcType=INTEGER},
            </if>
            <if test="articleCreateDate != null">
                #{articleCreateDate,jdbcType=VARCHAR},
            </if>
            <if test="articleOriginal != null">
                #{articleOriginal,jdbcType=BIT},
            </if>
            <if test="articleOriginalLink != null">
                #{articleOriginalLink,jdbcType=VARCHAR},
            </if>
            <if test="articleSecret != null">
                #{articleSecret,jdbcType=BIT},
            </if>
            <if test="articleTop != null">
                #{articleTop,jdbcType=BIT},
            </if>
            <if test="articleDeleted != null">
                #{articleDeleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.hy.aurora.domain.AurArticleInfoExample" resultType="java.lang.Long">
        select count(*) from aur_article_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update aur_article_info
        <set>
            <if test="record.articleId != null">
                article_id = #{record.articleId,jdbcType=INTEGER},
            </if>
            <if test="record.articleCategory != null">
                article_category = #{record.articleCategory,jdbcType=INTEGER},
            </if>
            <if test="record.articleTitle != null">
                article_title = #{record.articleTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.articleAuthor != null">
                article_author = #{record.articleAuthor,jdbcType=INTEGER},
            </if>
            <if test="record.articleLabel != null">
                article_label = #{record.articleLabel,jdbcType=INTEGER},
            </if>
            <if test="record.articleMdUrl != null">
                article_md_url = #{record.articleMdUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.articleDescription != null">
                article_description = #{record.articleDescription,jdbcType=VARCHAR},
            </if>
            <if test="record.articleCreator != null">
                article_creator = #{record.articleCreator,jdbcType=INTEGER},
            </if>
            <if test="record.articleCreateDate != null">
                article_create_date = #{record.articleCreateDate,jdbcType=VARCHAR},
            </if>
            <if test="record.articleOriginal != null">
                article_original = #{record.articleOriginal,jdbcType=BIT},
            </if>
            <if test="record.articleOriginalLink != null">
                article_original_link = #{record.articleOriginalLink,jdbcType=VARCHAR},
            </if>
            <if test="record.articleSecret != null">
                article_secret = #{record.articleSecret,jdbcType=BIT},
            </if>
            <if test="record.articleTop != null">
                article_top = #{record.articleTop,jdbcType=BIT},
            </if>
            <if test="record.articleDeleted != null">
                article_deleted = #{record.articleDeleted,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update aur_article_info
        set article_id = #{record.articleId,jdbcType=INTEGER},
        article_category = #{record.articleCategory,jdbcType=INTEGER},
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
        article_author = #{record.articleAuthor,jdbcType=INTEGER},
        article_label = #{record.articleLabel,jdbcType=INTEGER},
        article_md_url = #{record.articleMdUrl,jdbcType=VARCHAR},
        article_description = #{record.articleDescription,jdbcType=VARCHAR},
        article_creator = #{record.articleCreator,jdbcType=INTEGER},
        article_create_date = #{record.articleCreateDate,jdbcType=VARCHAR},
        article_original = #{record.articleOriginal,jdbcType=BIT},
        article_original_link = #{record.articleOriginalLink,jdbcType=VARCHAR},
        article_secret = #{record.articleSecret,jdbcType=BIT},
        article_top = #{record.articleTop,jdbcType=BIT},
        article_deleted = #{record.articleDeleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <select id="selectInfoList" resultType="HashMap">
        SELECT
            info.article_id AS a_id,
            info.article_title AS a_title,
            info.article_md_url AS a_url,
            info.article_description AS a_desc,
            info.article_create_date AS a_date,
            info.article_original AS a_ori,
            info.article_original_link AS a_link,
            auser.user_id AS u_id,
            auser.user_nickname AS u_name,
            label.label_id AS l_id,
            label.label_name AS l_name,
            category.category_id AS c_id,
            category.category_name AS c_name,
            COUNT(alike.like_id) AS l_nums
        FROM
            aur_article_info AS info
        LEFT JOIN aur_sys_user AS auser ON info.article_author = auser.user_id
        LEFT JOIN aur_article_label AS label ON info.article_id = label.label_id
        LEFT JOIN aur_article_category AS category ON info.article_category = category.category_id
        LEFT JOIN aur_article_like AS alike ON info.article_id = alike.like_object_id
        WHERE
            info.article_deleted = 0
        AND info.article_secret = 0
        ORDER BY
	        a_date DESC
    </select>
</mapper>