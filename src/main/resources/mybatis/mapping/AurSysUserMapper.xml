<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurSysUserMapper">
    <resultMap id="BaseResultMap" type="cn.hy.aurora.domain.AurSysUser">
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_nickname" jdbcType="VARCHAR" property="userNickname"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="user_github" jdbcType="VARCHAR" property="userGithub"/>
        <result column="user_auth_code" jdbcType="VARCHAR" property="userAuthCode"/>
        <result column="user_profile_photo" jdbcType="VARCHAR" property="userProfilePhoto"/>
        <result column="user_registration_time" jdbcType="TIMESTAMP" property="userRegistrationTime"/>
        <result column="user_deleted" jdbcType="BIT" property="userDeleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    user_id, user_nickname, user_email, user_github, user_auth_code, user_profile_photo, 
    user_registration_time, user_deleted
  </sql>
    <select id="selectByExample" parameterType="cn.hy.aurora.domain.AurSysUserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from aur_sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.hy.aurora.domain.AurSysUserExample">
        delete from aur_sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.hy.aurora.domain.AurSysUser">
    insert into aur_sys_user (user_id, user_nickname, user_email, 
      user_github, user_auth_code, user_profile_photo, 
      user_registration_time, user_deleted)
    values (#{userId,jdbcType=INTEGER}, #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userGithub,jdbcType=VARCHAR}, #{userAuthCode,jdbcType=VARCHAR}, #{userProfilePhoto,jdbcType=VARCHAR}, 
      #{userRegistrationTime,jdbcType=TIMESTAMP}, #{userDeleted,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="cn.hy.aurora.domain.AurSysUser">
        insert into aur_sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userNickname != null">
                user_nickname,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="userGithub != null">
                user_github,
            </if>
            <if test="userAuthCode != null">
                user_auth_code,
            </if>
            <if test="userProfilePhoto != null">
                user_profile_photo,
            </if>
            <if test="userRegistrationTime != null">
                user_registration_time,
            </if>
            <if test="userDeleted != null">
                user_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userNickname != null">
                #{userNickname,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userGithub != null">
                #{userGithub,jdbcType=VARCHAR},
            </if>
            <if test="userAuthCode != null">
                #{userAuthCode,jdbcType=VARCHAR},
            </if>
            <if test="userProfilePhoto != null">
                #{userProfilePhoto,jdbcType=VARCHAR},
            </if>
            <if test="userRegistrationTime != null">
                #{userRegistrationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userDeleted != null">
                #{userDeleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.hy.aurora.domain.AurSysUserExample" resultType="java.lang.Long">
        select count(*) from aur_sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update aur_sys_user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.userNickname != null">
                user_nickname = #{record.userNickname,jdbcType=VARCHAR},
            </if>
            <if test="record.userEmail != null">
                user_email = #{record.userEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.userGithub != null">
                user_github = #{record.userGithub,jdbcType=VARCHAR},
            </if>
            <if test="record.userAuthCode != null">
                user_auth_code = #{record.userAuthCode,jdbcType=VARCHAR},
            </if>
            <if test="record.userProfilePhoto != null">
                user_profile_photo = #{record.userProfilePhoto,jdbcType=VARCHAR},
            </if>
            <if test="record.userRegistrationTime != null">
                user_registration_time = #{record.userRegistrationTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userDeleted != null">
                user_deleted = #{record.userDeleted,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update aur_sys_user
        set user_id = #{record.userId,jdbcType=INTEGER},
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
        user_email = #{record.userEmail,jdbcType=VARCHAR},
        user_github = #{record.userGithub,jdbcType=VARCHAR},
        user_auth_code = #{record.userAuthCode,jdbcType=VARCHAR},
        user_profile_photo = #{record.userProfilePhoto,jdbcType=VARCHAR},
        user_registration_time = #{record.userRegistrationTime,jdbcType=TIMESTAMP},
        user_deleted = #{record.userDeleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>