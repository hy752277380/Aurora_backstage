<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurArticleLabelMapper">
  <resultMap id="BaseResultMap" type="cn.hy.aurora.domain.AurArticleLabel">
    <result column="label_id" jdbcType="INTEGER" property="labelId" />
    <result column="label_category" jdbcType="INTEGER" property="labelCategory" />
    <result column="label_name" jdbcType="VARCHAR" property="labelName" />
    <result column="label_description" jdbcType="VARCHAR" property="labelDescription" />
    <result column="label_create" jdbcType="INTEGER" property="labelCreate" />
    <result column="label_create_date" jdbcType="VARCHAR" property="labelCreateDate" />
    <result column="label_parent" jdbcType="INTEGER" property="labelParent" />
    <result column="label_deleted" jdbcType="BIT" property="labelDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    label_id, label_category, label_name, label_description, label_create, label_create_date, 
    label_parent, label_deleted
  </sql>
  <select id="selectByExample" parameterType="cn.hy.aurora.domain.AurArticleLabelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aur_article_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hy.aurora.domain.AurArticleLabelExample">
    delete from aur_article_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.aurora.domain.AurArticleLabel">
    insert into aur_article_label (label_id, label_category, label_name, 
      label_description, label_create, label_create_date, 
      label_parent, label_deleted)
    values (#{labelId,jdbcType=INTEGER}, #{labelCategory,jdbcType=INTEGER}, #{labelName,jdbcType=VARCHAR}, 
      #{labelDescription,jdbcType=VARCHAR}, #{labelCreate,jdbcType=INTEGER}, #{labelCreateDate,jdbcType=VARCHAR}, 
      #{labelParent,jdbcType=INTEGER}, #{labelDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.aurora.domain.AurArticleLabel">
    insert into aur_article_label
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="labelId != null">
        label_id,
      </if>
      <if test="labelCategory != null">
        label_category,
      </if>
      <if test="labelName != null">
        label_name,
      </if>
      <if test="labelDescription != null">
        label_description,
      </if>
      <if test="labelCreate != null">
        label_create,
      </if>
      <if test="labelCreateDate != null">
        label_create_date,
      </if>
      <if test="labelParent != null">
        label_parent,
      </if>
      <if test="labelDeleted != null">
        label_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="labelId != null">
        #{labelId,jdbcType=INTEGER},
      </if>
      <if test="labelCategory != null">
        #{labelCategory,jdbcType=INTEGER},
      </if>
      <if test="labelName != null">
        #{labelName,jdbcType=VARCHAR},
      </if>
      <if test="labelDescription != null">
        #{labelDescription,jdbcType=VARCHAR},
      </if>
      <if test="labelCreate != null">
        #{labelCreate,jdbcType=INTEGER},
      </if>
      <if test="labelCreateDate != null">
        #{labelCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="labelParent != null">
        #{labelParent,jdbcType=INTEGER},
      </if>
      <if test="labelDeleted != null">
        #{labelDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.aurora.domain.AurArticleLabelExample" resultType="java.lang.Long">
    select count(*) from aur_article_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aur_article_label
    <set>
      <if test="record.labelId != null">
        label_id = #{record.labelId,jdbcType=INTEGER},
      </if>
      <if test="record.labelCategory != null">
        label_category = #{record.labelCategory,jdbcType=INTEGER},
      </if>
      <if test="record.labelName != null">
        label_name = #{record.labelName,jdbcType=VARCHAR},
      </if>
      <if test="record.labelDescription != null">
        label_description = #{record.labelDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.labelCreate != null">
        label_create = #{record.labelCreate,jdbcType=INTEGER},
      </if>
      <if test="record.labelCreateDate != null">
        label_create_date = #{record.labelCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.labelParent != null">
        label_parent = #{record.labelParent,jdbcType=INTEGER},
      </if>
      <if test="record.labelDeleted != null">
        label_deleted = #{record.labelDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aur_article_label
    set label_id = #{record.labelId,jdbcType=INTEGER},
      label_category = #{record.labelCategory,jdbcType=INTEGER},
      label_name = #{record.labelName,jdbcType=VARCHAR},
      label_description = #{record.labelDescription,jdbcType=VARCHAR},
      label_create = #{record.labelCreate,jdbcType=INTEGER},
      label_create_date = #{record.labelCreateDate,jdbcType=VARCHAR},
      label_parent = #{record.labelParent,jdbcType=INTEGER},
      label_deleted = #{record.labelDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>