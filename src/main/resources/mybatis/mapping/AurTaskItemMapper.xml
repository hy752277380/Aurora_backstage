<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurTaskItemMapper">
  <resultMap id="BaseResultMap" type="cn.hy.aurora.mapper.AurTaskItem">
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_cycle" jdbcType="INTEGER" property="itemCycle" />
    <result column="item_component" jdbcType="INTEGER" property="itemComponent" />
    <result column="item_schedule" jdbcType="INTEGER" property="itemSchedule" />
    <result column="item_finish" jdbcType="BIT" property="itemFinish" />
    <result column="item_create_date" jdbcType="VARCHAR" property="itemCreateDate" />
    <result column="item_finish_date" jdbcType="VARCHAR" property="itemFinishDate" />
    <result column="item_enable" jdbcType="BIT" property="itemEnable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    item_id, item_name, item_cycle, item_component, item_schedule, item_finish, item_create_date, 
    item_finish_date, item_enable
  </sql>
  <select id="selectByExample" parameterType="cn.hy.aurora.mapper.AurTaskItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aur_task_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hy.aurora.mapper.AurTaskItemExample">
    delete from aur_task_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.aurora.mapper.AurTaskItem">
    insert into aur_task_item (item_id, item_name, item_cycle, 
      item_component, item_schedule, item_finish, 
      item_create_date, item_finish_date, item_enable
      )
    values (#{itemId,jdbcType=INTEGER}, #{itemName,jdbcType=VARCHAR}, #{itemCycle,jdbcType=INTEGER}, 
      #{itemComponent,jdbcType=INTEGER}, #{itemSchedule,jdbcType=INTEGER}, #{itemFinish,jdbcType=BIT}, 
      #{itemCreateDate,jdbcType=VARCHAR}, #{itemFinishDate,jdbcType=VARCHAR}, #{itemEnable,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.aurora.mapper.AurTaskItem">
    insert into aur_task_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemCycle != null">
        item_cycle,
      </if>
      <if test="itemComponent != null">
        item_component,
      </if>
      <if test="itemSchedule != null">
        item_schedule,
      </if>
      <if test="itemFinish != null">
        item_finish,
      </if>
      <if test="itemCreateDate != null">
        item_create_date,
      </if>
      <if test="itemFinishDate != null">
        item_finish_date,
      </if>
      <if test="itemEnable != null">
        item_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemCycle != null">
        #{itemCycle,jdbcType=INTEGER},
      </if>
      <if test="itemComponent != null">
        #{itemComponent,jdbcType=INTEGER},
      </if>
      <if test="itemSchedule != null">
        #{itemSchedule,jdbcType=INTEGER},
      </if>
      <if test="itemFinish != null">
        #{itemFinish,jdbcType=BIT},
      </if>
      <if test="itemCreateDate != null">
        #{itemCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="itemFinishDate != null">
        #{itemFinishDate,jdbcType=VARCHAR},
      </if>
      <if test="itemEnable != null">
        #{itemEnable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.aurora.mapper.AurTaskItemExample" resultType="java.lang.Long">
    select count(*) from aur_task_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aur_task_item
    <set>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemCycle != null">
        item_cycle = #{record.itemCycle,jdbcType=INTEGER},
      </if>
      <if test="record.itemComponent != null">
        item_component = #{record.itemComponent,jdbcType=INTEGER},
      </if>
      <if test="record.itemSchedule != null">
        item_schedule = #{record.itemSchedule,jdbcType=INTEGER},
      </if>
      <if test="record.itemFinish != null">
        item_finish = #{record.itemFinish,jdbcType=BIT},
      </if>
      <if test="record.itemCreateDate != null">
        item_create_date = #{record.itemCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.itemFinishDate != null">
        item_finish_date = #{record.itemFinishDate,jdbcType=VARCHAR},
      </if>
      <if test="record.itemEnable != null">
        item_enable = #{record.itemEnable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aur_task_item
    set item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      item_cycle = #{record.itemCycle,jdbcType=INTEGER},
      item_component = #{record.itemComponent,jdbcType=INTEGER},
      item_schedule = #{record.itemSchedule,jdbcType=INTEGER},
      item_finish = #{record.itemFinish,jdbcType=BIT},
      item_create_date = #{record.itemCreateDate,jdbcType=VARCHAR},
      item_finish_date = #{record.itemFinishDate,jdbcType=VARCHAR},
      item_enable = #{record.itemEnable,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>