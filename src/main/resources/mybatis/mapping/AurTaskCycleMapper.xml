<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.aurora.mapper.AurTaskCycleMapper">
  <resultMap id="BaseResultMap" type="cn.hy.aurora.mapper.AurTaskCycle">
    <result column="cycle_id" jdbcType="INTEGER" property="cycleId" />
    <result column="cycle_name" jdbcType="VARCHAR" property="cycleName" />
    <result column="cycle_cron" jdbcType="CHAR" property="cycleCron" />
    <result column="cycle_create" jdbcType="INTEGER" property="cycleCreate" />
    <result column="cycle_create_date" jdbcType="VARCHAR" property="cycleCreateDate" />
    <result column="cycle_modify" jdbcType="INTEGER" property="cycleModify" />
    <result column="cycle_modify_date" jdbcType="VARCHAR" property="cycleModifyDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cycle_id, cycle_name, cycle_cron, cycle_create, cycle_create_date, cycle_modify, 
    cycle_modify_date
  </sql>
  <select id="selectByExample" parameterType="cn.hy.aurora.mapper.AurTaskCycleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aur_task_cycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hy.aurora.mapper.AurTaskCycleExample">
    delete from aur_task_cycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.aurora.mapper.AurTaskCycle">
    insert into aur_task_cycle (cycle_id, cycle_name, cycle_cron, 
      cycle_create, cycle_create_date, cycle_modify, 
      cycle_modify_date)
    values (#{cycleId,jdbcType=INTEGER}, #{cycleName,jdbcType=VARCHAR}, #{cycleCron,jdbcType=CHAR}, 
      #{cycleCreate,jdbcType=INTEGER}, #{cycleCreateDate,jdbcType=VARCHAR}, #{cycleModify,jdbcType=INTEGER}, 
      #{cycleModifyDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.aurora.mapper.AurTaskCycle">
    insert into aur_task_cycle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cycleId != null">
        cycle_id,
      </if>
      <if test="cycleName != null">
        cycle_name,
      </if>
      <if test="cycleCron != null">
        cycle_cron,
      </if>
      <if test="cycleCreate != null">
        cycle_create,
      </if>
      <if test="cycleCreateDate != null">
        cycle_create_date,
      </if>
      <if test="cycleModify != null">
        cycle_modify,
      </if>
      <if test="cycleModifyDate != null">
        cycle_modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cycleId != null">
        #{cycleId,jdbcType=INTEGER},
      </if>
      <if test="cycleName != null">
        #{cycleName,jdbcType=VARCHAR},
      </if>
      <if test="cycleCron != null">
        #{cycleCron,jdbcType=CHAR},
      </if>
      <if test="cycleCreate != null">
        #{cycleCreate,jdbcType=INTEGER},
      </if>
      <if test="cycleCreateDate != null">
        #{cycleCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="cycleModify != null">
        #{cycleModify,jdbcType=INTEGER},
      </if>
      <if test="cycleModifyDate != null">
        #{cycleModifyDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.aurora.mapper.AurTaskCycleExample" resultType="java.lang.Long">
    select count(*) from aur_task_cycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aur_task_cycle
    <set>
      <if test="record.cycleId != null">
        cycle_id = #{record.cycleId,jdbcType=INTEGER},
      </if>
      <if test="record.cycleName != null">
        cycle_name = #{record.cycleName,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleCron != null">
        cycle_cron = #{record.cycleCron,jdbcType=CHAR},
      </if>
      <if test="record.cycleCreate != null">
        cycle_create = #{record.cycleCreate,jdbcType=INTEGER},
      </if>
      <if test="record.cycleCreateDate != null">
        cycle_create_date = #{record.cycleCreateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleModify != null">
        cycle_modify = #{record.cycleModify,jdbcType=INTEGER},
      </if>
      <if test="record.cycleModifyDate != null">
        cycle_modify_date = #{record.cycleModifyDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aur_task_cycle
    set cycle_id = #{record.cycleId,jdbcType=INTEGER},
      cycle_name = #{record.cycleName,jdbcType=VARCHAR},
      cycle_cron = #{record.cycleCron,jdbcType=CHAR},
      cycle_create = #{record.cycleCreate,jdbcType=INTEGER},
      cycle_create_date = #{record.cycleCreateDate,jdbcType=VARCHAR},
      cycle_modify = #{record.cycleModify,jdbcType=INTEGER},
      cycle_modify_date = #{record.cycleModifyDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>